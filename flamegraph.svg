<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="199"><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.50%)</title><rect x="0.0000%" y="421" width="0.5025%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>std::rt::cleanup (1 samples, 0.50%)</title><rect x="0.0000%" y="405" width="0.5025%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.50%)</title><rect x="0.0000%" y="389" width="0.5025%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.50%)</title><rect x="0.0000%" y="373" width="0.5025%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.50%)</title><rect x="0.0000%" y="357" width="0.5025%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>std::rt::cleanup::{{closure}} (1 samples, 0.50%)</title><rect x="0.0000%" y="341" width="0.5025%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>std::sys::unix::cleanup (1 samples, 0.50%)</title><rect x="0.0000%" y="325" width="0.5025%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::cleanup (1 samples, 0.50%)</title><rect x="0.0000%" y="309" width="0.5025%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.50%)</title><rect x="0.0000%" y="293" width="0.5025%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>__GI_munmap (1 samples, 0.50%)</title><rect x="0.0000%" y="277" width="0.5025%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.50%)</title><rect x="0.0000%" y="261" width="0.5025%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>do_syscall_64 (1 samples, 0.50%)</title><rect x="0.0000%" y="245" width="0.5025%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.50%)</title><rect x="0.0000%" y="229" width="0.5025%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>__vm_munmap (1 samples, 0.50%)</title><rect x="0.0000%" y="213" width="0.5025%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>do_mas_munmap (1 samples, 0.50%)</title><rect x="0.0000%" y="197" width="0.5025%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>do_mas_align_munmap (1 samples, 0.50%)</title><rect x="0.0000%" y="181" width="0.5025%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>__split_vma (1 samples, 0.50%)</title><rect x="0.0000%" y="165" width="0.5025%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>__vma_adjust (1 samples, 0.50%)</title><rect x="0.0000%" y="149" width="0.5025%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>mas_preallocate (1 samples, 0.50%)</title><rect x="0.0000%" y="133" width="0.5025%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="143.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.50%)</title><rect x="0.0000%" y="117" width="0.5025%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="127.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.50%)</title><rect x="0.0000%" y="101" width="0.5025%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="111.50"></text></g><g><title>__kmem_cache_alloc_bulk (1 samples, 0.50%)</title><rect x="0.0000%" y="85" width="0.5025%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="95.50"></text></g><g><title>___slab_alloc (1 samples, 0.50%)</title><rect x="0.0000%" y="69" width="0.5025%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="79.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (5 samples, 2.51%)</title><rect x="0.5025%" y="261" width="2.5126%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="5"/><text x="0.7525%" y="271.50">st..</text></g><g><title>std::sys::unix::thread::Thread::join (5 samples, 2.51%)</title><rect x="0.5025%" y="245" width="2.5126%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="5"/><text x="0.7525%" y="255.50">st..</text></g><g><title>__pthread_clockjoin_ex (5 samples, 2.51%)</title><rect x="0.5025%" y="229" width="2.5126%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="5"/><text x="0.7525%" y="239.50">__..</text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (5 samples, 2.51%)</title><rect x="0.5025%" y="213" width="2.5126%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="5"/><text x="0.7525%" y="223.50">__..</text></g><g><title>__futex_abstimed_wait_common (5 samples, 2.51%)</title><rect x="0.5025%" y="197" width="2.5126%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="5"/><text x="0.7525%" y="207.50">__..</text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 2.51%)</title><rect x="0.5025%" y="181" width="2.5126%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="5"/><text x="0.7525%" y="191.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.51%)</title><rect x="0.5025%" y="165" width="2.5126%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="5"/><text x="0.7525%" y="175.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.51%)</title><rect x="0.5025%" y="149" width="2.5126%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="5"/><text x="0.7525%" y="159.50">do..</text></g><g><title>__x64_sys_futex (5 samples, 2.51%)</title><rect x="0.5025%" y="133" width="2.5126%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="5"/><text x="0.7525%" y="143.50">__..</text></g><g><title>do_futex (5 samples, 2.51%)</title><rect x="0.5025%" y="117" width="2.5126%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="5"/><text x="0.7525%" y="127.50">do..</text></g><g><title>futex_wait (5 samples, 2.51%)</title><rect x="0.5025%" y="101" width="2.5126%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="5"/><text x="0.7525%" y="111.50">fu..</text></g><g><title>futex_wait_queue (5 samples, 2.51%)</title><rect x="0.5025%" y="85" width="2.5126%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="5"/><text x="0.7525%" y="95.50">fu..</text></g><g><title>schedule (5 samples, 2.51%)</title><rect x="0.5025%" y="69" width="2.5126%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="5"/><text x="0.7525%" y="79.50">sc..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="0.5025%" y="53" width="2.5126%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="5"/><text x="0.7525%" y="63.50">__..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.51%)</title><rect x="0.5025%" y="37" width="2.5126%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="5"/><text x="0.7525%" y="47.50">__..</text></g><g><title>_start (11 samples, 5.53%)</title><rect x="0.0000%" y="549" width="5.5276%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="11"/><text x="0.2500%" y="559.50">_start</text></g><g><title>__libc_start_main_impl (11 samples, 5.53%)</title><rect x="0.0000%" y="533" width="5.5276%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="11"/><text x="0.2500%" y="543.50">__libc_..</text></g><g><title>__libc_start_call_main (11 samples, 5.53%)</title><rect x="0.0000%" y="517" width="5.5276%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="527.50">__libc_..</text></g><g><title>main (11 samples, 5.53%)</title><rect x="0.0000%" y="501" width="5.5276%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="11"/><text x="0.2500%" y="511.50">main</text></g><g><title>std::rt::lang_start_internal (11 samples, 5.53%)</title><rect x="0.0000%" y="485" width="5.5276%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="11"/><text x="0.2500%" y="495.50">std::rt..</text></g><g><title>std::panic::catch_unwind (11 samples, 5.53%)</title><rect x="0.0000%" y="469" width="5.5276%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="479.50">std::pa..</text></g><g><title>std::panicking::try (11 samples, 5.53%)</title><rect x="0.0000%" y="453" width="5.5276%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="11"/><text x="0.2500%" y="463.50">std::pa..</text></g><g><title>std::panicking::try::do_call (11 samples, 5.53%)</title><rect x="0.0000%" y="437" width="5.5276%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="11"/><text x="0.2500%" y="447.50">std::pa..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10 samples, 5.03%)</title><rect x="0.5025%" y="421" width="5.0251%" height="15" fill="rgb(218,138,4)" fg:x="1" fg:w="10"/><text x="0.7525%" y="431.50">std::r..</text></g><g><title>std::panic::catch_unwind (10 samples, 5.03%)</title><rect x="0.5025%" y="405" width="5.0251%" height="15" fill="rgb(250,191,14)" fg:x="1" fg:w="10"/><text x="0.7525%" y="415.50">std::p..</text></g><g><title>std::panicking::try (10 samples, 5.03%)</title><rect x="0.5025%" y="389" width="5.0251%" height="15" fill="rgb(239,60,40)" fg:x="1" fg:w="10"/><text x="0.7525%" y="399.50">std::p..</text></g><g><title>std::panicking::try::do_call (10 samples, 5.03%)</title><rect x="0.5025%" y="373" width="5.0251%" height="15" fill="rgb(206,27,48)" fg:x="1" fg:w="10"/><text x="0.7525%" y="383.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10 samples, 5.03%)</title><rect x="0.5025%" y="357" width="5.0251%" height="15" fill="rgb(225,35,8)" fg:x="1" fg:w="10"/><text x="0.7525%" y="367.50">core::..</text></g><g><title>std::rt::lang_start::{{closure}} (10 samples, 5.03%)</title><rect x="0.5025%" y="341" width="5.0251%" height="15" fill="rgb(250,213,24)" fg:x="1" fg:w="10"/><text x="0.7525%" y="351.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 5.03%)</title><rect x="0.5025%" y="325" width="5.0251%" height="15" fill="rgb(247,123,22)" fg:x="1" fg:w="10"/><text x="0.7525%" y="335.50">std::s..</text></g><g><title>api_shuttle::main (10 samples, 5.03%)</title><rect x="0.5025%" y="309" width="5.0251%" height="15" fill="rgb(231,138,38)" fg:x="1" fg:w="10"/><text x="0.7525%" y="319.50">api_sh..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (10 samples, 5.03%)</title><rect x="0.5025%" y="293" width="5.0251%" height="15" fill="rgb(231,145,46)" fg:x="1" fg:w="10"/><text x="0.7525%" y="303.50">core::..</text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (10 samples, 5.03%)</title><rect x="0.5025%" y="277" width="5.0251%" height="15" fill="rgb(251,118,11)" fg:x="1" fg:w="10"/><text x="0.7525%" y="287.50">tokio:..</text></g><g><title>tokio::runtime::blocking::shutdown::Receiver::wait (5 samples, 2.51%)</title><rect x="3.0151%" y="261" width="2.5126%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="5"/><text x="3.2651%" y="271.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 2.51%)</title><rect x="3.0151%" y="245" width="2.5126%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="5"/><text x="3.2651%" y="255.50">to..</text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 2.51%)</title><rect x="3.0151%" y="229" width="2.5126%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="5"/><text x="3.2651%" y="239.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 2.51%)</title><rect x="3.0151%" y="213" width="2.5126%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="5"/><text x="3.2651%" y="223.50">pa..</text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 2.51%)</title><rect x="3.0151%" y="197" width="2.5126%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="5"/><text x="3.2651%" y="207.50">as..</text></g><g><title>sysvec_reschedule_ipi (5 samples, 2.51%)</title><rect x="3.0151%" y="181" width="2.5126%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="5"/><text x="3.2651%" y="191.50">sy..</text></g><g><title>irqentry_exit (5 samples, 2.51%)</title><rect x="3.0151%" y="165" width="2.5126%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="5"/><text x="3.2651%" y="175.50">ir..</text></g><g><title>irqentry_exit_to_user_mode (5 samples, 2.51%)</title><rect x="3.0151%" y="149" width="2.5126%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="5"/><text x="3.2651%" y="159.50">ir..</text></g><g><title>exit_to_user_mode_prepare (5 samples, 2.51%)</title><rect x="3.0151%" y="133" width="2.5126%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="5"/><text x="3.2651%" y="143.50">ex..</text></g><g><title>exit_to_user_mode_loop (5 samples, 2.51%)</title><rect x="3.0151%" y="117" width="2.5126%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="5"/><text x="3.2651%" y="127.50">ex..</text></g><g><title>schedule (5 samples, 2.51%)</title><rect x="3.0151%" y="101" width="2.5126%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="5"/><text x="3.2651%" y="111.50">sc..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="3.0151%" y="85" width="2.5126%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="5"/><text x="3.2651%" y="95.50">__..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.51%)</title><rect x="3.0151%" y="69" width="2.5126%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="5"/><text x="3.2651%" y="79.50">fi..</text></g><g><title>__rcu_read_unlock (5 samples, 2.51%)</title><rect x="3.0151%" y="53" width="2.5126%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="5"/><text x="3.2651%" y="63.50">__..</text></g><g><title>down_read (1 samples, 0.50%)</title><rect x="5.5276%" y="501" width="0.5025%" height="15" fill="rgb(216,154,8)" fg:x="11" fg:w="1"/><text x="5.7776%" y="511.50"></text></g><g><title>rwsem_down_read_slowpath (1 samples, 0.50%)</title><rect x="5.5276%" y="485" width="0.5025%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="1"/><text x="5.7776%" y="495.50"></text></g><g><title>schedule_preempt_disabled (1 samples, 0.50%)</title><rect x="5.5276%" y="469" width="0.5025%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="1"/><text x="5.7776%" y="479.50"></text></g><g><title>schedule (1 samples, 0.50%)</title><rect x="5.5276%" y="453" width="0.5025%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="1"/><text x="5.7776%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.50%)</title><rect x="5.5276%" y="437" width="0.5025%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="5.7776%" y="447.50"></text></g><g><title>dequeue_task (1 samples, 0.50%)</title><rect x="5.5276%" y="421" width="0.5025%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="5.7776%" y="431.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.50%)</title><rect x="5.5276%" y="405" width="0.5025%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="5.7776%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.50%)</title><rect x="5.5276%" y="389" width="0.5025%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="5.7776%" y="399.50"></text></g><g><title>update_cfs_group (1 samples, 0.50%)</title><rect x="5.5276%" y="373" width="0.5025%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="5.7776%" y="383.50"></text></g><g><title>reweight_entity (1 samples, 0.50%)</title><rect x="5.5276%" y="357" width="0.5025%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="5.7776%" y="367.50"></text></g><g><title>asm_exc_page_fault (2 samples, 1.01%)</title><rect x="5.5276%" y="549" width="1.0050%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="2"/><text x="5.7776%" y="559.50"></text></g><g><title>exc_page_fault (2 samples, 1.01%)</title><rect x="5.5276%" y="533" width="1.0050%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="2"/><text x="5.7776%" y="543.50"></text></g><g><title>do_user_addr_fault (2 samples, 1.01%)</title><rect x="5.5276%" y="517" width="1.0050%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="2"/><text x="5.7776%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.50%)</title><rect x="6.0302%" y="501" width="0.5025%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="6.2802%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.50%)</title><rect x="6.0302%" y="485" width="0.5025%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="6.2802%" y="495.50"></text></g><g><title>handle_pte_fault (1 samples, 0.50%)</title><rect x="6.0302%" y="469" width="0.5025%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="1"/><text x="6.2802%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.50%)</title><rect x="6.0302%" y="453" width="0.5025%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="1"/><text x="6.2802%" y="463.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.50%)</title><rect x="6.0302%" y="437" width="0.5025%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="1"/><text x="6.2802%" y="447.50"></text></g><g><title>__folio_alloc (1 samples, 0.50%)</title><rect x="6.0302%" y="421" width="0.5025%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="1"/><text x="6.2802%" y="431.50"></text></g><g><title>__alloc_pages (1 samples, 0.50%)</title><rect x="6.0302%" y="405" width="0.5025%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="1"/><text x="6.2802%" y="415.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.50%)</title><rect x="6.0302%" y="389" width="0.5025%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="1"/><text x="6.2802%" y="399.50"></text></g><g><title>post_alloc_hook (1 samples, 0.50%)</title><rect x="6.0302%" y="373" width="0.5025%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="1"/><text x="6.2802%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.50%)</title><rect x="6.5327%" y="533" width="0.5025%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="6.7827%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.50%)</title><rect x="6.5327%" y="517" width="0.5025%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="6.7827%" y="527.50"></text></g><g><title>__x64_sys_clone3 (1 samples, 0.50%)</title><rect x="6.5327%" y="501" width="0.5025%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="6.7827%" y="511.50"></text></g><g><title>__do_sys_clone3 (1 samples, 0.50%)</title><rect x="6.5327%" y="485" width="0.5025%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="6.7827%" y="495.50"></text></g><g><title>kernel_clone (1 samples, 0.50%)</title><rect x="6.5327%" y="469" width="0.5025%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="6.7827%" y="479.50"></text></g><g><title>copy_process (1 samples, 0.50%)</title><rect x="6.5327%" y="453" width="0.5025%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="6.7827%" y="463.50"></text></g><g><title>perf_event_init_task (1 samples, 0.50%)</title><rect x="6.5327%" y="437" width="0.5025%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="1"/><text x="6.7827%" y="447.50"></text></g><g><title>perf_event_init_context (1 samples, 0.50%)</title><rect x="6.5327%" y="421" width="0.5025%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="1"/><text x="6.7827%" y="431.50"></text></g><g><title>inherit_task_group.isra.0 (1 samples, 0.50%)</title><rect x="6.5327%" y="405" width="0.5025%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="1"/><text x="6.7827%" y="415.50"></text></g><g><title>inherit_event.constprop.0 (1 samples, 0.50%)</title><rect x="6.5327%" y="389" width="0.5025%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="1"/><text x="6.7827%" y="399.50"></text></g><g><title>list_add_event (1 samples, 0.50%)</title><rect x="6.5327%" y="373" width="0.5025%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="1"/><text x="6.7827%" y="383.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.50%)</title><rect x="7.5377%" y="517" width="0.5025%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="1"/><text x="7.7877%" y="527.50"></text></g><g><title>do_mas_munmap (1 samples, 0.50%)</title><rect x="8.0402%" y="293" width="0.5025%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="8.2902%" y="303.50"></text></g><g><title>mas_find (1 samples, 0.50%)</title><rect x="8.0402%" y="277" width="0.5025%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="1"/><text x="8.2902%" y="287.50"></text></g><g><title>do_mmap (2 samples, 1.01%)</title><rect x="8.0402%" y="325" width="1.0050%" height="15" fill="rgb(232,23,21)" fg:x="16" fg:w="2"/><text x="8.2902%" y="335.50"></text></g><g><title>mmap_region (2 samples, 1.01%)</title><rect x="8.0402%" y="309" width="1.0050%" height="15" fill="rgb(244,5,23)" fg:x="16" fg:w="2"/><text x="8.2902%" y="319.50"></text></g><g><title>mas_preallocate (1 samples, 0.50%)</title><rect x="8.5427%" y="293" width="0.5025%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="1"/><text x="8.7927%" y="303.50"></text></g><g><title>__cond_resched (5 samples, 2.51%)</title><rect x="9.0452%" y="309" width="2.5126%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="5"/><text x="9.2952%" y="319.50">__..</text></g><g><title>preempt_schedule_common (5 samples, 2.51%)</title><rect x="9.0452%" y="293" width="2.5126%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="5"/><text x="9.2952%" y="303.50">pr..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="9.0452%" y="277" width="2.5126%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="5"/><text x="9.2952%" y="287.50">__..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.51%)</title><rect x="9.0452%" y="261" width="2.5126%" height="15" fill="rgb(223,113,26)" fg:x="18" fg:w="5"/><text x="9.2952%" y="271.50">fi..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.51%)</title><rect x="9.0452%" y="245" width="2.5126%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="5"/><text x="9.2952%" y="255.50">__..</text></g><g><title>perf_ctx_enable (5 samples, 2.51%)</title><rect x="9.0452%" y="229" width="2.5126%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="5"/><text x="9.2952%" y="239.50">pe..</text></g><g><title>x86_pmu_enable (5 samples, 2.51%)</title><rect x="9.0452%" y="213" width="2.5126%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="5"/><text x="9.2952%" y="223.50">x8..</text></g><g><title>clone3 (11 samples, 5.53%)</title><rect x="6.5327%" y="549" width="5.5276%" height="15" fill="rgb(224,114,35)" fg:x="13" fg:w="11"/><text x="6.7827%" y="559.50">clone3</text></g><g><title>start_thread (10 samples, 5.03%)</title><rect x="7.0352%" y="533" width="5.0251%" height="15" fill="rgb(245,159,27)" fg:x="14" fg:w="10"/><text x="7.2852%" y="543.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 4.02%)</title><rect x="8.0402%" y="517" width="4.0201%" height="15" fill="rgb(245,172,44)" fg:x="16" fg:w="8"/><text x="8.2902%" y="527.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 4.02%)</title><rect x="8.0402%" y="501" width="4.0201%" height="15" fill="rgb(236,23,11)" fg:x="16" fg:w="8"/><text x="8.2902%" y="511.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 4.02%)</title><rect x="8.0402%" y="485" width="4.0201%" height="15" fill="rgb(205,117,38)" fg:x="16" fg:w="8"/><text x="8.2902%" y="495.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (8 samples, 4.02%)</title><rect x="8.0402%" y="469" width="4.0201%" height="15" fill="rgb(237,72,25)" fg:x="16" fg:w="8"/><text x="8.2902%" y="479.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (8 samples, 4.02%)</title><rect x="8.0402%" y="453" width="4.0201%" height="15" fill="rgb(244,70,9)" fg:x="16" fg:w="8"/><text x="8.2902%" y="463.50">std:..</text></g><g><title>__GI___mmap64 (8 samples, 4.02%)</title><rect x="8.0402%" y="437" width="4.0201%" height="15" fill="rgb(217,125,39)" fg:x="16" fg:w="8"/><text x="8.2902%" y="447.50">__GI..</text></g><g><title>__GI___mmap64 (8 samples, 4.02%)</title><rect x="8.0402%" y="421" width="4.0201%" height="15" fill="rgb(235,36,10)" fg:x="16" fg:w="8"/><text x="8.2902%" y="431.50">__GI..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 4.02%)</title><rect x="8.0402%" y="405" width="4.0201%" height="15" fill="rgb(251,123,47)" fg:x="16" fg:w="8"/><text x="8.2902%" y="415.50">entr..</text></g><g><title>do_syscall_64 (8 samples, 4.02%)</title><rect x="8.0402%" y="389" width="4.0201%" height="15" fill="rgb(221,13,13)" fg:x="16" fg:w="8"/><text x="8.2902%" y="399.50">do_s..</text></g><g><title>__x64_sys_mmap (8 samples, 4.02%)</title><rect x="8.0402%" y="373" width="4.0201%" height="15" fill="rgb(238,131,9)" fg:x="16" fg:w="8"/><text x="8.2902%" y="383.50">__x6..</text></g><g><title>ksys_mmap_pgoff (8 samples, 4.02%)</title><rect x="8.0402%" y="357" width="4.0201%" height="15" fill="rgb(211,50,8)" fg:x="16" fg:w="8"/><text x="8.2902%" y="367.50">ksys..</text></g><g><title>vm_mmap_pgoff (8 samples, 4.02%)</title><rect x="8.0402%" y="341" width="4.0201%" height="15" fill="rgb(245,182,24)" fg:x="16" fg:w="8"/><text x="8.2902%" y="351.50">vm_m..</text></g><g><title>down_write_killable (6 samples, 3.02%)</title><rect x="9.0452%" y="325" width="3.0151%" height="15" fill="rgb(242,14,37)" fg:x="18" fg:w="6"/><text x="9.2952%" y="335.50">dow..</text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.50%)</title><rect x="11.5578%" y="309" width="0.5025%" height="15" fill="rgb(246,228,12)" fg:x="23" fg:w="1"/><text x="11.8078%" y="319.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.50%)</title><rect x="11.5578%" y="293" width="0.5025%" height="15" fill="rgb(213,55,15)" fg:x="23" fg:w="1"/><text x="11.8078%" y="303.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.50%)</title><rect x="11.5578%" y="277" width="0.5025%" height="15" fill="rgb(209,9,3)" fg:x="23" fg:w="1"/><text x="11.8078%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.50%)</title><rect x="12.0603%" y="549" width="0.5025%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="1"/><text x="12.3103%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.50%)</title><rect x="12.0603%" y="533" width="0.5025%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="1"/><text x="12.3103%" y="543.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.50%)</title><rect x="12.0603%" y="517" width="0.5025%" height="15" fill="rgb(220,109,13)" fg:x="24" fg:w="1"/><text x="12.3103%" y="527.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.50%)</title><rect x="12.0603%" y="501" width="0.5025%" height="15" fill="rgb(232,18,1)" fg:x="24" fg:w="1"/><text x="12.3103%" y="511.50"></text></g><g><title>bprm_execve (1 samples, 0.50%)</title><rect x="12.0603%" y="485" width="0.5025%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="1"/><text x="12.3103%" y="495.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.50%)</title><rect x="12.0603%" y="469" width="0.5025%" height="15" fill="rgb(224,123,36)" fg:x="24" fg:w="1"/><text x="12.3103%" y="479.50"></text></g><g><title>exec_binprm (1 samples, 0.50%)</title><rect x="12.0603%" y="453" width="0.5025%" height="15" fill="rgb(240,125,3)" fg:x="24" fg:w="1"/><text x="12.3103%" y="463.50"></text></g><g><title>search_binary_handler (1 samples, 0.50%)</title><rect x="12.0603%" y="437" width="0.5025%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="1"/><text x="12.3103%" y="447.50"></text></g><g><title>load_elf_binary (1 samples, 0.50%)</title><rect x="12.0603%" y="421" width="0.5025%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="1"/><text x="12.3103%" y="431.50"></text></g><g><title>padzero (1 samples, 0.50%)</title><rect x="12.0603%" y="405" width="0.5025%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="1"/><text x="12.3103%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="389" width="0.5025%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="1"/><text x="12.3103%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="373" width="0.5025%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="1"/><text x="12.3103%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="357" width="0.5025%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="1"/><text x="12.3103%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="341" width="0.5025%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="1"/><text x="12.3103%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="325" width="0.5025%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="1"/><text x="12.3103%" y="335.50"></text></g><g><title>handle_pte_fault (1 samples, 0.50%)</title><rect x="12.0603%" y="309" width="0.5025%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="1"/><text x="12.3103%" y="319.50"></text></g><g><title>__anon_vma_prepare (1 samples, 0.50%)</title><rect x="12.0603%" y="293" width="0.5025%" height="15" fill="rgb(219,102,11)" fg:x="24" fg:w="1"/><text x="12.3103%" y="303.50"></text></g><g><title>perf_ctx_enable (49 samples, 24.62%)</title><rect x="20.6030%" y="485" width="24.6231%" height="15" fill="rgb(243,110,44)" fg:x="41" fg:w="49"/><text x="20.8530%" y="495.50">perf_ctx_enable</text></g><g><title>__perf_event_task_sched_in (73 samples, 36.68%)</title><rect x="13.0653%" y="501" width="36.6834%" height="15" fill="rgb(222,74,54)" fg:x="26" fg:w="73"/><text x="13.3153%" y="511.50">__perf_event_task_sched_in</text></g><g><title>x86_pmu_enable (9 samples, 4.52%)</title><rect x="45.2261%" y="485" width="4.5226%" height="15" fill="rgb(216,99,12)" fg:x="90" fg:w="9"/><text x="45.4761%" y="495.50">x86_p..</text></g><g><title>finish_task_switch.isra.0 (75 samples, 37.69%)</title><rect x="12.5628%" y="517" width="37.6884%" height="15" fill="rgb(226,22,26)" fg:x="25" fg:w="75"/><text x="12.8128%" y="527.50">finish_task_switch.isra.0</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.50%)</title><rect x="49.7487%" y="501" width="0.5025%" height="15" fill="rgb(217,163,10)" fg:x="99" fg:w="1"/><text x="49.9987%" y="511.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.50%)</title><rect x="49.7487%" y="485" width="0.5025%" height="15" fill="rgb(213,25,53)" fg:x="99" fg:w="1"/><text x="49.9987%" y="495.50"></text></g><g><title>irq_work_run (1 samples, 0.50%)</title><rect x="49.7487%" y="469" width="0.5025%" height="15" fill="rgb(252,105,26)" fg:x="99" fg:w="1"/><text x="49.9987%" y="479.50"></text></g><g><title>api-shuttle (101 samples, 50.75%)</title><rect x="0.0000%" y="565" width="50.7538%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="101"/><text x="0.2500%" y="575.50">api-shuttle</text></g><g><title>ret_from_fork (76 samples, 38.19%)</title><rect x="12.5628%" y="549" width="38.1910%" height="15" fill="rgb(229,68,48)" fg:x="25" fg:w="76"/><text x="12.8128%" y="559.50">ret_from_fork</text></g><g><title>schedule_tail (76 samples, 38.19%)</title><rect x="12.5628%" y="533" width="38.1910%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="76"/><text x="12.8128%" y="543.50">schedule_tail</text></g><g><title>recalc_sigpending (1 samples, 0.50%)</title><rect x="50.2513%" y="517" width="0.5025%" height="15" fill="rgb(223,20,43)" fg:x="100" fg:w="1"/><text x="50.5013%" y="527.50"></text></g><g><title>perf-exec (5 samples, 2.51%)</title><rect x="50.7538%" y="565" width="2.5126%" height="15" fill="rgb(229,81,49)" fg:x="101" fg:w="5"/><text x="51.0038%" y="575.50">pe..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.51%)</title><rect x="50.7538%" y="549" width="2.5126%" height="15" fill="rgb(236,28,36)" fg:x="101" fg:w="5"/><text x="51.0038%" y="559.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.51%)</title><rect x="50.7538%" y="533" width="2.5126%" height="15" fill="rgb(249,185,26)" fg:x="101" fg:w="5"/><text x="51.0038%" y="543.50">do..</text></g><g><title>__x64_sys_execve (5 samples, 2.51%)</title><rect x="50.7538%" y="517" width="2.5126%" height="15" fill="rgb(249,174,33)" fg:x="101" fg:w="5"/><text x="51.0038%" y="527.50">__..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 2.51%)</title><rect x="50.7538%" y="501" width="2.5126%" height="15" fill="rgb(233,201,37)" fg:x="101" fg:w="5"/><text x="51.0038%" y="511.50">do..</text></g><g><title>bprm_execve (5 samples, 2.51%)</title><rect x="50.7538%" y="485" width="2.5126%" height="15" fill="rgb(221,78,26)" fg:x="101" fg:w="5"/><text x="51.0038%" y="495.50">bp..</text></g><g><title>bprm_execve.part.0 (5 samples, 2.51%)</title><rect x="50.7538%" y="469" width="2.5126%" height="15" fill="rgb(250,127,30)" fg:x="101" fg:w="5"/><text x="51.0038%" y="479.50">bp..</text></g><g><title>exec_binprm (5 samples, 2.51%)</title><rect x="50.7538%" y="453" width="2.5126%" height="15" fill="rgb(230,49,44)" fg:x="101" fg:w="5"/><text x="51.0038%" y="463.50">ex..</text></g><g><title>search_binary_handler (5 samples, 2.51%)</title><rect x="50.7538%" y="437" width="2.5126%" height="15" fill="rgb(229,67,23)" fg:x="101" fg:w="5"/><text x="51.0038%" y="447.50">se..</text></g><g><title>load_elf_binary (5 samples, 2.51%)</title><rect x="50.7538%" y="421" width="2.5126%" height="15" fill="rgb(249,83,47)" fg:x="101" fg:w="5"/><text x="51.0038%" y="431.50">lo..</text></g><g><title>begin_new_exec (5 samples, 2.51%)</title><rect x="50.7538%" y="405" width="2.5126%" height="15" fill="rgb(215,43,3)" fg:x="101" fg:w="5"/><text x="51.0038%" y="415.50">be..</text></g><g><title>perf_event_exec (5 samples, 2.51%)</title><rect x="50.7538%" y="389" width="2.5126%" height="15" fill="rgb(238,154,13)" fg:x="101" fg:w="5"/><text x="51.0038%" y="399.50">pe..</text></g><g><title>perf_event_enable_on_exec (4 samples, 2.01%)</title><rect x="51.2563%" y="373" width="2.0101%" height="15" fill="rgb(219,56,2)" fg:x="102" fg:w="4"/><text x="51.5063%" y="383.50">p..</text></g><g><title>ctx_resched (4 samples, 2.01%)</title><rect x="51.2563%" y="357" width="2.0101%" height="15" fill="rgb(233,0,4)" fg:x="102" fg:w="4"/><text x="51.5063%" y="367.50">c..</text></g><g><title>x86_pmu_enable (4 samples, 2.01%)</title><rect x="51.2563%" y="341" width="2.0101%" height="15" fill="rgb(235,30,7)" fg:x="102" fg:w="4"/><text x="51.5063%" y="351.50">x..</text></g><g><title>__cond_resched (4 samples, 2.01%)</title><rect x="53.2663%" y="373" width="2.0101%" height="15" fill="rgb(250,79,13)" fg:x="106" fg:w="4"/><text x="53.5163%" y="383.50">_..</text></g><g><title>preempt_schedule_common (4 samples, 2.01%)</title><rect x="53.2663%" y="357" width="2.0101%" height="15" fill="rgb(211,146,34)" fg:x="106" fg:w="4"/><text x="53.5163%" y="367.50">p..</text></g><g><title>__schedule (4 samples, 2.01%)</title><rect x="53.2663%" y="341" width="2.0101%" height="15" fill="rgb(228,22,38)" fg:x="106" fg:w="4"/><text x="53.5163%" y="351.50">_..</text></g><g><title>finish_task_switch.isra.0 (4 samples, 2.01%)</title><rect x="53.2663%" y="325" width="2.0101%" height="15" fill="rgb(235,168,5)" fg:x="106" fg:w="4"/><text x="53.5163%" y="335.50">f..</text></g><g><title>__perf_event_task_sched_in (4 samples, 2.01%)</title><rect x="53.2663%" y="309" width="2.0101%" height="15" fill="rgb(221,155,16)" fg:x="106" fg:w="4"/><text x="53.5163%" y="319.50">_..</text></g><g><title>x86_pmu_enable (4 samples, 2.01%)</title><rect x="53.2663%" y="293" width="2.0101%" height="15" fill="rgb(215,215,53)" fg:x="106" fg:w="4"/><text x="53.5163%" y="303.50">x..</text></g><g><title>__rcu_read_unlock (4 samples, 2.01%)</title><rect x="55.7789%" y="261" width="2.0101%" height="15" fill="rgb(223,4,10)" fg:x="111" fg:w="4"/><text x="56.0289%" y="271.50">_..</text></g><g><title>__x64_sys_madvise (10 samples, 5.03%)</title><rect x="53.2663%" y="453" width="5.0251%" height="15" fill="rgb(234,103,6)" fg:x="106" fg:w="10"/><text x="53.5163%" y="463.50">__x64_..</text></g><g><title>do_madvise (10 samples, 5.03%)</title><rect x="53.2663%" y="437" width="5.0251%" height="15" fill="rgb(227,97,0)" fg:x="106" fg:w="10"/><text x="53.5163%" y="447.50">do_mad..</text></g><g><title>madvise_walk_vmas (10 samples, 5.03%)</title><rect x="53.2663%" y="421" width="5.0251%" height="15" fill="rgb(234,150,53)" fg:x="106" fg:w="10"/><text x="53.5163%" y="431.50">madvis..</text></g><g><title>madvise_vma_behavior (10 samples, 5.03%)</title><rect x="53.2663%" y="405" width="5.0251%" height="15" fill="rgb(228,201,54)" fg:x="106" fg:w="10"/><text x="53.5163%" y="415.50">madvis..</text></g><g><title>zap_page_range_single (10 samples, 5.03%)</title><rect x="53.2663%" y="389" width="5.0251%" height="15" fill="rgb(222,22,37)" fg:x="106" fg:w="10"/><text x="53.5163%" y="399.50">zap_pa..</text></g><g><title>unmap_single_vma (6 samples, 3.02%)</title><rect x="55.2764%" y="373" width="3.0151%" height="15" fill="rgb(237,53,32)" fg:x="110" fg:w="6"/><text x="55.5264%" y="383.50">unm..</text></g><g><title>unmap_page_range (5 samples, 2.51%)</title><rect x="55.7789%" y="357" width="2.5126%" height="15" fill="rgb(233,25,53)" fg:x="111" fg:w="5"/><text x="56.0289%" y="367.50">un..</text></g><g><title>zap_pmd_range.isra.0 (5 samples, 2.51%)</title><rect x="55.7789%" y="341" width="2.5126%" height="15" fill="rgb(210,40,34)" fg:x="111" fg:w="5"/><text x="56.0289%" y="351.50">za..</text></g><g><title>__cond_resched (5 samples, 2.51%)</title><rect x="55.7789%" y="325" width="2.5126%" height="15" fill="rgb(241,220,44)" fg:x="111" fg:w="5"/><text x="56.0289%" y="335.50">__..</text></g><g><title>preempt_schedule_common (5 samples, 2.51%)</title><rect x="55.7789%" y="309" width="2.5126%" height="15" fill="rgb(235,28,35)" fg:x="111" fg:w="5"/><text x="56.0289%" y="319.50">pr..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="55.7789%" y="293" width="2.5126%" height="15" fill="rgb(210,56,17)" fg:x="111" fg:w="5"/><text x="56.0289%" y="303.50">__..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.51%)</title><rect x="55.7789%" y="277" width="2.5126%" height="15" fill="rgb(224,130,29)" fg:x="111" fg:w="5"/><text x="56.0289%" y="287.50">fi..</text></g><g><title>asm_sysvec_call_function (1 samples, 0.50%)</title><rect x="57.7889%" y="261" width="0.5025%" height="15" fill="rgb(235,212,8)" fg:x="115" fg:w="1"/><text x="58.0389%" y="271.50"></text></g><g><title>sysvec_call_function (1 samples, 0.50%)</title><rect x="57.7889%" y="245" width="0.5025%" height="15" fill="rgb(223,33,50)" fg:x="115" fg:w="1"/><text x="58.0389%" y="255.50"></text></g><g><title>__sysvec_call_function (1 samples, 0.50%)</title><rect x="57.7889%" y="229" width="0.5025%" height="15" fill="rgb(219,149,13)" fg:x="115" fg:w="1"/><text x="58.0389%" y="239.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.50%)</title><rect x="57.7889%" y="213" width="0.5025%" height="15" fill="rgb(250,156,29)" fg:x="115" fg:w="1"/><text x="58.0389%" y="223.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.50%)</title><rect x="57.7889%" y="197" width="0.5025%" height="15" fill="rgb(216,193,19)" fg:x="115" fg:w="1"/><text x="58.0389%" y="207.50"></text></g><g><title>advise_stack_range (15 samples, 7.54%)</title><rect x="53.2663%" y="517" width="7.5377%" height="15" fill="rgb(216,135,14)" fg:x="106" fg:w="15"/><text x="53.5163%" y="527.50">advise_sta..</text></g><g><title>__GI_madvise (15 samples, 7.54%)</title><rect x="53.2663%" y="501" width="7.5377%" height="15" fill="rgb(241,47,5)" fg:x="106" fg:w="15"/><text x="53.5163%" y="511.50">__GI_madvi..</text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 7.54%)</title><rect x="53.2663%" y="485" width="7.5377%" height="15" fill="rgb(233,42,35)" fg:x="106" fg:w="15"/><text x="53.5163%" y="495.50">entry_SYSC..</text></g><g><title>do_syscall_64 (15 samples, 7.54%)</title><rect x="53.2663%" y="469" width="7.5377%" height="15" fill="rgb(231,13,6)" fg:x="106" fg:w="15"/><text x="53.5163%" y="479.50">do_syscall..</text></g><g><title>syscall_exit_to_user_mode (5 samples, 2.51%)</title><rect x="58.2915%" y="453" width="2.5126%" height="15" fill="rgb(207,181,40)" fg:x="116" fg:w="5"/><text x="58.5415%" y="463.50">sy..</text></g><g><title>exit_to_user_mode_prepare (5 samples, 2.51%)</title><rect x="58.2915%" y="437" width="2.5126%" height="15" fill="rgb(254,173,49)" fg:x="116" fg:w="5"/><text x="58.5415%" y="447.50">ex..</text></g><g><title>exit_to_user_mode_loop (5 samples, 2.51%)</title><rect x="58.2915%" y="421" width="2.5126%" height="15" fill="rgb(221,1,38)" fg:x="116" fg:w="5"/><text x="58.5415%" y="431.50">ex..</text></g><g><title>schedule (5 samples, 2.51%)</title><rect x="58.2915%" y="405" width="2.5126%" height="15" fill="rgb(206,124,46)" fg:x="116" fg:w="5"/><text x="58.5415%" y="415.50">sc..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="58.2915%" y="389" width="2.5126%" height="15" fill="rgb(249,21,11)" fg:x="116" fg:w="5"/><text x="58.5415%" y="399.50">__..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.51%)</title><rect x="58.2915%" y="373" width="2.5126%" height="15" fill="rgb(222,201,40)" fg:x="116" fg:w="5"/><text x="58.5415%" y="383.50">fi..</text></g><g><title>__rcu_read_unlock (5 samples, 2.51%)</title><rect x="58.2915%" y="357" width="2.5126%" height="15" fill="rgb(235,61,29)" fg:x="116" fg:w="5"/><text x="58.5415%" y="367.50">__..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.51%)</title><rect x="60.8040%" y="341" width="2.5126%" height="15" fill="rgb(219,207,3)" fg:x="121" fg:w="5"/><text x="61.0540%" y="351.50">__..</text></g><g><title>perf_ctx_enable (5 samples, 2.51%)</title><rect x="60.8040%" y="325" width="2.5126%" height="15" fill="rgb(222,56,46)" fg:x="121" fg:w="5"/><text x="61.0540%" y="335.50">pe..</text></g><g><title>x86_pmu_enable (5 samples, 2.51%)</title><rect x="60.8040%" y="309" width="2.5126%" height="15" fill="rgb(239,76,54)" fg:x="121" fg:w="5"/><text x="61.0540%" y="319.50">x8..</text></g><g><title>__rcu_read_unlock (4 samples, 2.01%)</title><rect x="63.3166%" y="341" width="2.0101%" height="15" fill="rgb(231,124,27)" fg:x="126" fg:w="4"/><text x="63.5666%" y="351.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 5.03%)</title><rect x="60.8040%" y="517" width="5.0251%" height="15" fill="rgb(249,195,6)" fg:x="121" fg:w="10"/><text x="61.0540%" y="527.50">entry_..</text></g><g><title>do_syscall_64 (10 samples, 5.03%)</title><rect x="60.8040%" y="501" width="5.0251%" height="15" fill="rgb(237,174,47)" fg:x="121" fg:w="10"/><text x="61.0540%" y="511.50">do_sys..</text></g><g><title>__x64_sys_exit (10 samples, 5.03%)</title><rect x="60.8040%" y="485" width="5.0251%" height="15" fill="rgb(206,201,31)" fg:x="121" fg:w="10"/><text x="61.0540%" y="495.50">__x64_..</text></g><g><title>do_exit (10 samples, 5.03%)</title><rect x="60.8040%" y="469" width="5.0251%" height="15" fill="rgb(231,57,52)" fg:x="121" fg:w="10"/><text x="61.0540%" y="479.50">do_exit</text></g><g><title>exit_mm (10 samples, 5.03%)</title><rect x="60.8040%" y="453" width="5.0251%" height="15" fill="rgb(248,177,22)" fg:x="121" fg:w="10"/><text x="61.0540%" y="463.50">exit_mm</text></g><g><title>down_read (10 samples, 5.03%)</title><rect x="60.8040%" y="437" width="5.0251%" height="15" fill="rgb(215,211,37)" fg:x="121" fg:w="10"/><text x="61.0540%" y="447.50">down_r..</text></g><g><title>rwsem_down_read_slowpath (10 samples, 5.03%)</title><rect x="60.8040%" y="421" width="5.0251%" height="15" fill="rgb(241,128,51)" fg:x="121" fg:w="10"/><text x="61.0540%" y="431.50">rwsem_..</text></g><g><title>schedule_preempt_disabled (10 samples, 5.03%)</title><rect x="60.8040%" y="405" width="5.0251%" height="15" fill="rgb(227,165,31)" fg:x="121" fg:w="10"/><text x="61.0540%" y="415.50">schedu..</text></g><g><title>schedule (10 samples, 5.03%)</title><rect x="60.8040%" y="389" width="5.0251%" height="15" fill="rgb(228,167,24)" fg:x="121" fg:w="10"/><text x="61.0540%" y="399.50">schedu..</text></g><g><title>__schedule (10 samples, 5.03%)</title><rect x="60.8040%" y="373" width="5.0251%" height="15" fill="rgb(228,143,12)" fg:x="121" fg:w="10"/><text x="61.0540%" y="383.50">__sche..</text></g><g><title>finish_task_switch.isra.0 (10 samples, 5.03%)</title><rect x="60.8040%" y="357" width="5.0251%" height="15" fill="rgb(249,149,8)" fg:x="121" fg:w="10"/><text x="61.0540%" y="367.50">finish..</text></g><g><title>asm_sysvec_call_function (1 samples, 0.50%)</title><rect x="65.3266%" y="341" width="0.5025%" height="15" fill="rgb(243,35,44)" fg:x="130" fg:w="1"/><text x="65.5766%" y="351.50"></text></g><g><title>sysvec_call_function (1 samples, 0.50%)</title><rect x="65.3266%" y="325" width="0.5025%" height="15" fill="rgb(246,89,9)" fg:x="130" fg:w="1"/><text x="65.5766%" y="335.50"></text></g><g><title>__sysvec_call_function (1 samples, 0.50%)</title><rect x="65.3266%" y="309" width="0.5025%" height="15" fill="rgb(233,213,13)" fg:x="130" fg:w="1"/><text x="65.5766%" y="319.50"></text></g><g><title>__GI_munmap (1 samples, 0.50%)</title><rect x="66.3317%" y="293" width="0.5025%" height="15" fill="rgb(233,141,41)" fg:x="132" fg:w="1"/><text x="66.5817%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.50%)</title><rect x="66.3317%" y="277" width="0.5025%" height="15" fill="rgb(239,167,4)" fg:x="132" fg:w="1"/><text x="66.5817%" y="287.50"></text></g><g><title>do_syscall_64 (1 samples, 0.50%)</title><rect x="66.3317%" y="261" width="0.5025%" height="15" fill="rgb(209,217,16)" fg:x="132" fg:w="1"/><text x="66.5817%" y="271.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.50%)</title><rect x="66.3317%" y="245" width="0.5025%" height="15" fill="rgb(219,88,35)" fg:x="132" fg:w="1"/><text x="66.5817%" y="255.50"></text></g><g><title>__vm_munmap (1 samples, 0.50%)</title><rect x="66.3317%" y="229" width="0.5025%" height="15" fill="rgb(220,193,23)" fg:x="132" fg:w="1"/><text x="66.5817%" y="239.50"></text></g><g><title>down_write_killable (1 samples, 0.50%)</title><rect x="66.3317%" y="213" width="0.5025%" height="15" fill="rgb(230,90,52)" fg:x="132" fg:w="1"/><text x="66.5817%" y="223.50"></text></g><g><title>mas_prev (1 samples, 0.50%)</title><rect x="66.8342%" y="149" width="0.5025%" height="15" fill="rgb(252,106,19)" fg:x="133" fg:w="1"/><text x="67.0842%" y="159.50"></text></g><g><title>mas_prev_nentry (1 samples, 0.50%)</title><rect x="66.8342%" y="133" width="0.5025%" height="15" fill="rgb(206,74,20)" fg:x="133" fg:w="1"/><text x="67.0842%" y="143.50"></text></g><g><title>std::sys::unix::thread::guard::current (4 samples, 2.01%)</title><rect x="65.8291%" y="453" width="2.0101%" height="15" fill="rgb(230,138,44)" fg:x="131" fg:w="4"/><text x="66.0791%" y="463.50">s..</text></g><g><title>__pthread_getattr_np (4 samples, 2.01%)</title><rect x="65.8291%" y="437" width="2.0101%" height="15" fill="rgb(235,182,43)" fg:x="131" fg:w="4"/><text x="66.0791%" y="447.50">_..</text></g><g><title>__GI___libc_malloc (4 samples, 2.01%)</title><rect x="65.8291%" y="421" width="2.0101%" height="15" fill="rgb(242,16,51)" fg:x="131" fg:w="4"/><text x="66.0791%" y="431.50">_..</text></g><g><title>tcache_init (4 samples, 2.01%)</title><rect x="65.8291%" y="405" width="2.0101%" height="15" fill="rgb(248,9,4)" fg:x="131" fg:w="4"/><text x="66.0791%" y="415.50">t..</text></g><g><title>tcache_init (4 samples, 2.01%)</title><rect x="65.8291%" y="389" width="2.0101%" height="15" fill="rgb(210,31,22)" fg:x="131" fg:w="4"/><text x="66.0791%" y="399.50">t..</text></g><g><title>arena_get2 (4 samples, 2.01%)</title><rect x="65.8291%" y="373" width="2.0101%" height="15" fill="rgb(239,54,39)" fg:x="131" fg:w="4"/><text x="66.0791%" y="383.50">a..</text></g><g><title>arena_get2 (4 samples, 2.01%)</title><rect x="65.8291%" y="357" width="2.0101%" height="15" fill="rgb(230,99,41)" fg:x="131" fg:w="4"/><text x="66.0791%" y="367.50">a..</text></g><g><title>_int_new_arena (4 samples, 2.01%)</title><rect x="65.8291%" y="341" width="2.0101%" height="15" fill="rgb(253,106,12)" fg:x="131" fg:w="4"/><text x="66.0791%" y="351.50">_..</text></g><g><title>new_heap (3 samples, 1.51%)</title><rect x="66.3317%" y="325" width="1.5075%" height="15" fill="rgb(213,46,41)" fg:x="132" fg:w="3"/><text x="66.5817%" y="335.50"></text></g><g><title>alloc_new_heap (3 samples, 1.51%)</title><rect x="66.3317%" y="309" width="1.5075%" height="15" fill="rgb(215,133,35)" fg:x="132" fg:w="3"/><text x="66.5817%" y="319.50"></text></g><g><title>asm_exc_page_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="293" width="1.0050%" height="15" fill="rgb(213,28,5)" fg:x="133" fg:w="2"/><text x="67.0842%" y="303.50"></text></g><g><title>exc_page_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="277" width="1.0050%" height="15" fill="rgb(215,77,49)" fg:x="133" fg:w="2"/><text x="67.0842%" y="287.50"></text></g><g><title>do_user_addr_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="261" width="1.0050%" height="15" fill="rgb(248,100,22)" fg:x="133" fg:w="2"/><text x="67.0842%" y="271.50"></text></g><g><title>handle_mm_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="245" width="1.0050%" height="15" fill="rgb(208,67,9)" fg:x="133" fg:w="2"/><text x="67.0842%" y="255.50"></text></g><g><title>__handle_mm_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="229" width="1.0050%" height="15" fill="rgb(219,133,21)" fg:x="133" fg:w="2"/><text x="67.0842%" y="239.50"></text></g><g><title>handle_pte_fault (2 samples, 1.01%)</title><rect x="66.8342%" y="213" width="1.0050%" height="15" fill="rgb(246,46,29)" fg:x="133" fg:w="2"/><text x="67.0842%" y="223.50"></text></g><g><title>do_anonymous_page (2 samples, 1.01%)</title><rect x="66.8342%" y="197" width="1.0050%" height="15" fill="rgb(246,185,52)" fg:x="133" fg:w="2"/><text x="67.0842%" y="207.50"></text></g><g><title>__anon_vma_prepare (2 samples, 1.01%)</title><rect x="66.8342%" y="181" width="1.0050%" height="15" fill="rgb(252,136,11)" fg:x="133" fg:w="2"/><text x="67.0842%" y="191.50"></text></g><g><title>find_mergeable_anon_vma (2 samples, 1.01%)</title><rect x="66.8342%" y="165" width="1.0050%" height="15" fill="rgb(219,138,53)" fg:x="133" fg:w="2"/><text x="67.0842%" y="175.50"></text></g><g><title>mas_walk (1 samples, 0.50%)</title><rect x="67.3367%" y="149" width="0.5025%" height="15" fill="rgb(211,51,23)" fg:x="134" fg:w="1"/><text x="67.5867%" y="159.50"></text></g><g><title>mtree_range_walk (1 samples, 0.50%)</title><rect x="67.3367%" y="133" width="0.5025%" height="15" fill="rgb(247,221,28)" fg:x="134" fg:w="1"/><text x="67.5867%" y="143.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 2.51%)</title><rect x="67.8392%" y="421" width="2.5126%" height="15" fill="rgb(251,222,45)" fg:x="135" fg:w="5"/><text x="68.0892%" y="431.50">pa..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 2.51%)</title><rect x="67.8392%" y="405" width="2.5126%" height="15" fill="rgb(217,162,53)" fg:x="135" fg:w="5"/><text x="68.0892%" y="415.50">pa..</text></g><g><title>syscall (5 samples, 2.51%)</title><rect x="67.8392%" y="389" width="2.5126%" height="15" fill="rgb(229,93,14)" fg:x="135" fg:w="5"/><text x="68.0892%" y="399.50">sy..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.51%)</title><rect x="67.8392%" y="373" width="2.5126%" height="15" fill="rgb(209,67,49)" fg:x="135" fg:w="5"/><text x="68.0892%" y="383.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.51%)</title><rect x="67.8392%" y="357" width="2.5126%" height="15" fill="rgb(213,87,29)" fg:x="135" fg:w="5"/><text x="68.0892%" y="367.50">do..</text></g><g><title>__x64_sys_futex (5 samples, 2.51%)</title><rect x="67.8392%" y="341" width="2.5126%" height="15" fill="rgb(205,151,52)" fg:x="135" fg:w="5"/><text x="68.0892%" y="351.50">__..</text></g><g><title>do_futex (5 samples, 2.51%)</title><rect x="67.8392%" y="325" width="2.5126%" height="15" fill="rgb(253,215,39)" fg:x="135" fg:w="5"/><text x="68.0892%" y="335.50">do..</text></g><g><title>futex_wait (5 samples, 2.51%)</title><rect x="67.8392%" y="309" width="2.5126%" height="15" fill="rgb(221,220,41)" fg:x="135" fg:w="5"/><text x="68.0892%" y="319.50">fu..</text></g><g><title>futex_wait_queue (5 samples, 2.51%)</title><rect x="67.8392%" y="293" width="2.5126%" height="15" fill="rgb(218,133,21)" fg:x="135" fg:w="5"/><text x="68.0892%" y="303.50">fu..</text></g><g><title>schedule (5 samples, 2.51%)</title><rect x="67.8392%" y="277" width="2.5126%" height="15" fill="rgb(221,193,43)" fg:x="135" fg:w="5"/><text x="68.0892%" y="287.50">sc..</text></g><g><title>__schedule (5 samples, 2.51%)</title><rect x="67.8392%" y="261" width="2.5126%" height="15" fill="rgb(240,128,52)" fg:x="135" fg:w="5"/><text x="68.0892%" y="271.50">__..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.51%)</title><rect x="67.8392%" y="245" width="2.5126%" height="15" fill="rgb(253,114,12)" fg:x="135" fg:w="5"/><text x="68.0892%" y="255.50">fi..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.51%)</title><rect x="67.8392%" y="229" width="2.5126%" height="15" fill="rgb(215,223,47)" fg:x="135" fg:w="5"/><text x="68.0892%" y="239.50">__..</text></g><g><title>perf_ctx_enable (5 samples, 2.51%)</title><rect x="67.8392%" y="213" width="2.5126%" height="15" fill="rgb(248,225,23)" fg:x="135" fg:w="5"/><text x="68.0892%" y="223.50">pe..</text></g><g><title>x86_pmu_enable (5 samples, 2.51%)</title><rect x="67.8392%" y="197" width="2.5126%" height="15" fill="rgb(250,108,0)" fg:x="135" fg:w="5"/><text x="68.0892%" y="207.50">x8..</text></g><g><title>perf_ctx_enable (10 samples, 5.03%)</title><rect x="70.3518%" y="229" width="5.0251%" height="15" fill="rgb(228,208,7)" fg:x="140" fg:w="10"/><text x="70.6018%" y="239.50">perf_c..</text></g><g><title>do_syscall_64 (15 samples, 7.54%)</title><rect x="70.3518%" y="373" width="7.5377%" height="15" fill="rgb(244,45,10)" fg:x="140" fg:w="15"/><text x="70.6018%" y="383.50">do_syscall..</text></g><g><title>__x64_sys_futex (15 samples, 7.54%)</title><rect x="70.3518%" y="357" width="7.5377%" height="15" fill="rgb(207,125,25)" fg:x="140" fg:w="15"/><text x="70.6018%" y="367.50">__x64_sys_..</text></g><g><title>do_futex (15 samples, 7.54%)</title><rect x="70.3518%" y="341" width="7.5377%" height="15" fill="rgb(210,195,18)" fg:x="140" fg:w="15"/><text x="70.6018%" y="351.50">do_futex</text></g><g><title>futex_wait (15 samples, 7.54%)</title><rect x="70.3518%" y="325" width="7.5377%" height="15" fill="rgb(249,80,12)" fg:x="140" fg:w="15"/><text x="70.6018%" y="335.50">futex_wait</text></g><g><title>futex_wait_queue (15 samples, 7.54%)</title><rect x="70.3518%" y="309" width="7.5377%" height="15" fill="rgb(221,65,9)" fg:x="140" fg:w="15"/><text x="70.6018%" y="319.50">futex_wait..</text></g><g><title>schedule (15 samples, 7.54%)</title><rect x="70.3518%" y="293" width="7.5377%" height="15" fill="rgb(235,49,36)" fg:x="140" fg:w="15"/><text x="70.6018%" y="303.50">schedule</text></g><g><title>__schedule (15 samples, 7.54%)</title><rect x="70.3518%" y="277" width="7.5377%" height="15" fill="rgb(225,32,20)" fg:x="140" fg:w="15"/><text x="70.6018%" y="287.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (15 samples, 7.54%)</title><rect x="70.3518%" y="261" width="7.5377%" height="15" fill="rgb(215,141,46)" fg:x="140" fg:w="15"/><text x="70.6018%" y="271.50">finish_tas..</text></g><g><title>__perf_event_task_sched_in (15 samples, 7.54%)</title><rect x="70.3518%" y="245" width="7.5377%" height="15" fill="rgb(250,160,47)" fg:x="140" fg:w="15"/><text x="70.6018%" y="255.50">__perf_eve..</text></g><g><title>perf_pmu_nop_void (5 samples, 2.51%)</title><rect x="75.3769%" y="229" width="2.5126%" height="15" fill="rgb(216,222,40)" fg:x="150" fg:w="5"/><text x="75.6269%" y="239.50">pe..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (16 samples, 8.04%)</title><rect x="70.3518%" y="421" width="8.0402%" height="15" fill="rgb(234,217,39)" fg:x="140" fg:w="16"/><text x="70.6018%" y="431.50">parking_lot..</text></g><g><title>syscall (16 samples, 8.04%)</title><rect x="70.3518%" y="405" width="8.0402%" height="15" fill="rgb(207,178,40)" fg:x="140" fg:w="16"/><text x="70.6018%" y="415.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 8.04%)</title><rect x="70.3518%" y="389" width="8.0402%" height="15" fill="rgb(221,136,13)" fg:x="140" fg:w="16"/><text x="70.6018%" y="399.50">entry_SYSCA..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.50%)</title><rect x="77.8894%" y="373" width="0.5025%" height="15" fill="rgb(249,199,10)" fg:x="155" fg:w="1"/><text x="78.1394%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::shutdown_core (1 samples, 0.50%)</title><rect x="78.3920%" y="309" width="0.5025%" height="15" fill="rgb(249,222,13)" fg:x="156" fg:w="1"/><text x="78.6420%" y="319.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 2.01%)</title><rect x="84.4221%" y="69" width="2.0101%" height="15" fill="rgb(244,185,38)" fg:x="168" fg:w="4"/><text x="84.6721%" y="79.50">i..</text></g><g><title>perf_ctx_enable (19 samples, 9.55%)</title><rect x="81.4070%" y="85" width="9.5477%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="19"/><text x="81.6570%" y="95.50">perf_ctx_enable</text></g><g><title>x86_pmu_enable (9 samples, 4.52%)</title><rect x="86.4322%" y="69" width="4.5226%" height="15" fill="rgb(250,229,37)" fg:x="172" fg:w="9"/><text x="86.6822%" y="79.50">x86_p..</text></g><g><title>__x64_sys_futex (29 samples, 14.57%)</title><rect x="78.8945%" y="213" width="14.5729%" height="15" fill="rgb(206,174,23)" fg:x="157" fg:w="29"/><text x="79.1445%" y="223.50">__x64_sys_futex</text></g><g><title>do_futex (29 samples, 14.57%)</title><rect x="78.8945%" y="197" width="14.5729%" height="15" fill="rgb(211,33,43)" fg:x="157" fg:w="29"/><text x="79.1445%" y="207.50">do_futex</text></g><g><title>futex_wait (29 samples, 14.57%)</title><rect x="78.8945%" y="181" width="14.5729%" height="15" fill="rgb(245,58,50)" fg:x="157" fg:w="29"/><text x="79.1445%" y="191.50">futex_wait</text></g><g><title>futex_wait_queue (29 samples, 14.57%)</title><rect x="78.8945%" y="165" width="14.5729%" height="15" fill="rgb(244,68,36)" fg:x="157" fg:w="29"/><text x="79.1445%" y="175.50">futex_wait_queue</text></g><g><title>schedule (29 samples, 14.57%)</title><rect x="78.8945%" y="149" width="14.5729%" height="15" fill="rgb(232,229,15)" fg:x="157" fg:w="29"/><text x="79.1445%" y="159.50">schedule</text></g><g><title>__schedule (29 samples, 14.57%)</title><rect x="78.8945%" y="133" width="14.5729%" height="15" fill="rgb(254,30,23)" fg:x="157" fg:w="29"/><text x="79.1445%" y="143.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (29 samples, 14.57%)</title><rect x="78.8945%" y="117" width="14.5729%" height="15" fill="rgb(235,160,14)" fg:x="157" fg:w="29"/><text x="79.1445%" y="127.50">finish_task_switch.isr..</text></g><g><title>__perf_event_task_sched_in (29 samples, 14.57%)</title><rect x="78.8945%" y="101" width="14.5729%" height="15" fill="rgb(212,155,44)" fg:x="157" fg:w="29"/><text x="79.1445%" y="111.50">__perf_event_task_sche..</text></g><g><title>perf_pmu_nop_void (5 samples, 2.51%)</title><rect x="90.9548%" y="85" width="2.5126%" height="15" fill="rgb(226,2,50)" fg:x="181" fg:w="5"/><text x="91.2048%" y="95.50">pe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 28.14%)</title><rect x="65.8291%" y="501" width="28.1407%" height="15" fill="rgb(234,177,6)" fg:x="131" fg:w="56"/><text x="66.0791%" y="511.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 28.14%)</title><rect x="65.8291%" y="485" width="28.1407%" height="15" fill="rgb(217,24,9)" fg:x="131" fg:w="56"/><text x="66.0791%" y="495.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 28.14%)</title><rect x="65.8291%" y="469" width="28.1407%" height="15" fill="rgb(220,13,46)" fg:x="131" fg:w="56"/><text x="66.0791%" y="479.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (52 samples, 26.13%)</title><rect x="67.8392%" y="453" width="26.1307%" height="15" fill="rgb(239,221,27)" fg:x="135" fg:w="52"/><text x="68.0892%" y="463.50">std::sys_common::backtrace::__rust_begin_s..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (52 samples, 26.13%)</title><rect x="67.8392%" y="437" width="26.1307%" height="15" fill="rgb(222,198,25)" fg:x="135" fg:w="52"/><text x="68.0892%" y="447.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (31 samples, 15.58%)</title><rect x="78.3920%" y="421" width="15.5779%" height="15" fill="rgb(211,99,13)" fg:x="156" fg:w="31"/><text x="78.6420%" y="431.50">tokio::runtime::task::ha..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (31 samples, 15.58%)</title><rect x="78.3920%" y="405" width="15.5779%" height="15" fill="rgb(232,111,31)" fg:x="156" fg:w="31"/><text x="78.6420%" y="415.50">tokio::runtime::task::co..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (31 samples, 15.58%)</title><rect x="78.3920%" y="389" width="15.5779%" height="15" fill="rgb(245,82,37)" fg:x="156" fg:w="31"/><text x="78.6420%" y="399.50">tokio::loom::std::unsafe..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (31 samples, 15.58%)</title><rect x="78.3920%" y="373" width="15.5779%" height="15" fill="rgb(227,149,46)" fg:x="156" fg:w="31"/><text x="78.6420%" y="383.50">tokio::runtime::schedule..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (31 samples, 15.58%)</title><rect x="78.3920%" y="357" width="15.5779%" height="15" fill="rgb(218,36,50)" fg:x="156" fg:w="31"/><text x="78.6420%" y="367.50">tokio::runtime::context:..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (31 samples, 15.58%)</title><rect x="78.3920%" y="341" width="15.5779%" height="15" fill="rgb(226,80,48)" fg:x="156" fg:w="31"/><text x="78.6420%" y="351.50">tokio::runtime::context:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (31 samples, 15.58%)</title><rect x="78.3920%" y="325" width="15.5779%" height="15" fill="rgb(238,224,15)" fg:x="156" fg:w="31"/><text x="78.6420%" y="335.50">tokio::runtime::schedule..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (30 samples, 15.08%)</title><rect x="78.8945%" y="309" width="15.0754%" height="15" fill="rgb(241,136,10)" fg:x="157" fg:w="30"/><text x="79.1445%" y="319.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (30 samples, 15.08%)</title><rect x="78.8945%" y="293" width="15.0754%" height="15" fill="rgb(208,32,45)" fg:x="157" fg:w="30"/><text x="79.1445%" y="303.50">tokio::runtime::schedul..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (30 samples, 15.08%)</title><rect x="78.8945%" y="277" width="15.0754%" height="15" fill="rgb(207,135,9)" fg:x="157" fg:w="30"/><text x="79.1445%" y="287.50">parking_lot::condvar::C..</text></g><g><title>syscall (30 samples, 15.08%)</title><rect x="78.8945%" y="261" width="15.0754%" height="15" fill="rgb(206,86,44)" fg:x="157" fg:w="30"/><text x="79.1445%" y="271.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 15.08%)</title><rect x="78.8945%" y="245" width="15.0754%" height="15" fill="rgb(245,177,15)" fg:x="157" fg:w="30"/><text x="79.1445%" y="255.50">entry_SYSCALL_64_after_..</text></g><g><title>do_syscall_64 (30 samples, 15.08%)</title><rect x="78.8945%" y="229" width="15.0754%" height="15" fill="rgb(206,64,50)" fg:x="157" fg:w="30"/><text x="79.1445%" y="239.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.50%)</title><rect x="93.4673%" y="213" width="0.5025%" height="15" fill="rgb(234,36,40)" fg:x="186" fg:w="1"/><text x="93.7173%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.50%)</title><rect x="93.4673%" y="197" width="0.5025%" height="15" fill="rgb(213,64,8)" fg:x="186" fg:w="1"/><text x="93.7173%" y="207.50"></text></g><g><title>switch_fpu_return (1 samples, 0.50%)</title><rect x="93.4673%" y="181" width="0.5025%" height="15" fill="rgb(210,75,36)" fg:x="186" fg:w="1"/><text x="93.7173%" y="191.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.50%)</title><rect x="93.4673%" y="165" width="0.5025%" height="15" fill="rgb(229,88,21)" fg:x="186" fg:w="1"/><text x="93.7173%" y="175.50"></text></g><g><title>do_mas_munmap (1 samples, 0.50%)</title><rect x="93.9698%" y="373" width="0.5025%" height="15" fill="rgb(252,204,47)" fg:x="187" fg:w="1"/><text x="94.2198%" y="383.50"></text></g><g><title>do_mas_align_munmap (1 samples, 0.50%)</title><rect x="93.9698%" y="357" width="0.5025%" height="15" fill="rgb(208,77,27)" fg:x="187" fg:w="1"/><text x="94.2198%" y="367.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.50%)</title><rect x="93.9698%" y="341" width="0.5025%" height="15" fill="rgb(221,76,26)" fg:x="187" fg:w="1"/><text x="94.2198%" y="351.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.50%)</title><rect x="93.9698%" y="325" width="0.5025%" height="15" fill="rgb(225,139,18)" fg:x="187" fg:w="1"/><text x="94.2198%" y="335.50"></text></g><g><title>mas_wr_modify (1 samples, 0.50%)</title><rect x="93.9698%" y="309" width="0.5025%" height="15" fill="rgb(230,137,11)" fg:x="187" fg:w="1"/><text x="94.2198%" y="319.50"></text></g><g><title>mas_wr_bnode (1 samples, 0.50%)</title><rect x="93.9698%" y="293" width="0.5025%" height="15" fill="rgb(212,28,1)" fg:x="187" fg:w="1"/><text x="94.2198%" y="303.50"></text></g><g><title>mas_rebalance.isra.0 (1 samples, 0.50%)</title><rect x="93.9698%" y="277" width="0.5025%" height="15" fill="rgb(248,164,17)" fg:x="187" fg:w="1"/><text x="94.2198%" y="287.50"></text></g><g><title>mas_spanning_rebalance.isra.0 (1 samples, 0.50%)</title><rect x="93.9698%" y="261" width="0.5025%" height="15" fill="rgb(222,171,42)" fg:x="187" fg:w="1"/><text x="94.2198%" y="271.50"></text></g><g><title>mas_mab_cp (1 samples, 0.50%)</title><rect x="93.9698%" y="245" width="0.5025%" height="15" fill="rgb(243,84,45)" fg:x="187" fg:w="1"/><text x="94.2198%" y="255.50"></text></g><g><title>rwsem_optimistic_spin (3 samples, 1.51%)</title><rect x="94.9749%" y="341" width="1.5075%" height="15" fill="rgb(252,49,23)" fg:x="189" fg:w="3"/><text x="95.2249%" y="351.50"></text></g><g><title>osq_lock (3 samples, 1.51%)</title><rect x="94.9749%" y="325" width="1.5075%" height="15" fill="rgb(215,19,7)" fg:x="189" fg:w="3"/><text x="95.2249%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 2.01%)</title><rect x="96.4824%" y="309" width="2.0101%" height="15" fill="rgb(238,81,41)" fg:x="192" fg:w="4"/><text x="96.7324%" y="319.50">_..</text></g><g><title>dequeue_task (1 samples, 0.50%)</title><rect x="98.4925%" y="309" width="0.5025%" height="15" fill="rgb(210,199,37)" fg:x="196" fg:w="1"/><text x="98.7425%" y="319.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.50%)</title><rect x="98.4925%" y="293" width="0.5025%" height="15" fill="rgb(244,192,49)" fg:x="196" fg:w="1"/><text x="98.7425%" y="303.50"></text></g><g><title>update_curr (1 samples, 0.50%)</title><rect x="98.4925%" y="277" width="0.5025%" height="15" fill="rgb(226,211,11)" fg:x="196" fg:w="1"/><text x="98.7425%" y="287.50"></text></g><g><title>load_balance (1 samples, 0.50%)</title><rect x="98.9950%" y="261" width="0.5025%" height="15" fill="rgb(236,162,54)" fg:x="197" fg:w="1"/><text x="99.2450%" y="271.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (1 samples, 0.50%)</title><rect x="98.9950%" y="245" width="0.5025%" height="15" fill="rgb(220,229,9)" fg:x="197" fg:w="1"/><text x="99.2450%" y="255.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.50%)</title><rect x="98.9950%" y="229" width="0.5025%" height="15" fill="rgb(250,87,22)" fg:x="197" fg:w="1"/><text x="99.2450%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.50%)</title><rect x="98.9950%" y="213" width="0.5025%" height="15" fill="rgb(239,43,17)" fg:x="197" fg:w="1"/><text x="99.2450%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.50%)</title><rect x="98.9950%" y="197" width="0.5025%" height="15" fill="rgb(231,177,25)" fg:x="197" fg:w="1"/><text x="99.2450%" y="207.50"></text></g><g><title>all (199 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(219,179,1)" fg:x="0" fg:w="199"/><text x="0.2500%" y="591.50"></text></g><g><title>tokio-runtime-w (93 samples, 46.73%)</title><rect x="53.2663%" y="565" width="46.7337%" height="15" fill="rgb(238,219,53)" fg:x="106" fg:w="93"/><text x="53.5163%" y="575.50">tokio-runtime-w</text></g><g><title>clone3 (93 samples, 46.73%)</title><rect x="53.2663%" y="549" width="46.7337%" height="15" fill="rgb(232,167,36)" fg:x="106" fg:w="93"/><text x="53.5163%" y="559.50">clone3</text></g><g><title>start_thread (93 samples, 46.73%)</title><rect x="53.2663%" y="533" width="46.7337%" height="15" fill="rgb(244,19,51)" fg:x="106" fg:w="93"/><text x="53.5163%" y="543.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68 samples, 34.17%)</title><rect x="65.8291%" y="517" width="34.1709%" height="15" fill="rgb(224,6,22)" fg:x="131" fg:w="68"/><text x="66.0791%" y="527.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (12 samples, 6.03%)</title><rect x="93.9698%" y="501" width="6.0302%" height="15" fill="rgb(224,145,5)" fg:x="187" fg:w="12"/><text x="94.2198%" y="511.50">core::pt..</text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (12 samples, 6.03%)</title><rect x="93.9698%" y="485" width="6.0302%" height="15" fill="rgb(234,130,49)" fg:x="187" fg:w="12"/><text x="94.2198%" y="495.50">&lt;std::sy..</text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (12 samples, 6.03%)</title><rect x="93.9698%" y="469" width="6.0302%" height="15" fill="rgb(254,6,2)" fg:x="187" fg:w="12"/><text x="94.2198%" y="479.50">std::sys..</text></g><g><title>__GI_munmap (12 samples, 6.03%)</title><rect x="93.9698%" y="453" width="6.0302%" height="15" fill="rgb(208,96,46)" fg:x="187" fg:w="12"/><text x="94.2198%" y="463.50">__GI_mun..</text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 6.03%)</title><rect x="93.9698%" y="437" width="6.0302%" height="15" fill="rgb(239,3,39)" fg:x="187" fg:w="12"/><text x="94.2198%" y="447.50">entry_SY..</text></g><g><title>do_syscall_64 (12 samples, 6.03%)</title><rect x="93.9698%" y="421" width="6.0302%" height="15" fill="rgb(233,210,1)" fg:x="187" fg:w="12"/><text x="94.2198%" y="431.50">do_sysca..</text></g><g><title>__x64_sys_munmap (12 samples, 6.03%)</title><rect x="93.9698%" y="405" width="6.0302%" height="15" fill="rgb(244,137,37)" fg:x="187" fg:w="12"/><text x="94.2198%" y="415.50">__x64_sy..</text></g><g><title>__vm_munmap (12 samples, 6.03%)</title><rect x="93.9698%" y="389" width="6.0302%" height="15" fill="rgb(240,136,2)" fg:x="187" fg:w="12"/><text x="94.2198%" y="399.50">__vm_mun..</text></g><g><title>down_write_killable (11 samples, 5.53%)</title><rect x="94.4724%" y="373" width="5.5276%" height="15" fill="rgb(239,18,37)" fg:x="188" fg:w="11"/><text x="94.7224%" y="383.50">down_wr..</text></g><g><title>rwsem_down_write_slowpath (11 samples, 5.53%)</title><rect x="94.4724%" y="357" width="5.5276%" height="15" fill="rgb(218,185,22)" fg:x="188" fg:w="11"/><text x="94.7224%" y="367.50">rwsem_d..</text></g><g><title>schedule (7 samples, 3.52%)</title><rect x="96.4824%" y="341" width="3.5176%" height="15" fill="rgb(225,218,4)" fg:x="192" fg:w="7"/><text x="96.7324%" y="351.50">sch..</text></g><g><title>__schedule (7 samples, 3.52%)</title><rect x="96.4824%" y="325" width="3.5176%" height="15" fill="rgb(230,182,32)" fg:x="192" fg:w="7"/><text x="96.7324%" y="335.50">__s..</text></g><g><title>pick_next_task (2 samples, 1.01%)</title><rect x="98.9950%" y="309" width="1.0050%" height="15" fill="rgb(242,56,43)" fg:x="197" fg:w="2"/><text x="99.2450%" y="319.50"></text></g><g><title>pick_next_task_fair (2 samples, 1.01%)</title><rect x="98.9950%" y="293" width="1.0050%" height="15" fill="rgb(233,99,24)" fg:x="197" fg:w="2"/><text x="99.2450%" y="303.50"></text></g><g><title>newidle_balance (2 samples, 1.01%)</title><rect x="98.9950%" y="277" width="1.0050%" height="15" fill="rgb(234,209,42)" fg:x="197" fg:w="2"/><text x="99.2450%" y="287.50"></text></g><g><title>update_blocked_averages (1 samples, 0.50%)</title><rect x="99.4975%" y="261" width="0.5025%" height="15" fill="rgb(227,7,12)" fg:x="198" fg:w="1"/><text x="99.7475%" y="271.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.50%)</title><rect x="99.4975%" y="245" width="0.5025%" height="15" fill="rgb(245,203,43)" fg:x="198" fg:w="1"/><text x="99.7475%" y="255.50"></text></g></svg></svg>